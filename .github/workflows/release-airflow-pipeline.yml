name: Release Airflow Pipeline
on:
  workflow_call:
    inputs:
        airflow_volume_claim:
          required: false
          default: airflow-dag-volume
          type: string
        airflow_volume_mount_path:
          required: false
          default: /mnt/efs
          type: string
        airflow_env:
          required: true
          type: string
        run_docker_build:
          required: false
          default: true
          type: boolean
jobs:
    create_runner:
      name: Create runner
      runs-on: ubuntu-latest
      if: github.ref_type == 'tag'
      steps:
        - name: Create Runner
          id: create_runner
          uses: pagopa/pdnd-github-actions/deploy-gh-runner@532e8ac6faf40b251dd33c1ccec1d8565349489e
          with:
            api_server: ${{ vars.K8S_API_SERVER }}
            access_token: ${{ secrets.GH_ACTIONS_SA_ACCESS_TOKEN }}
            base64_encoded_ca_crt: ${{ secrets.K8S_CA_CRT }}
            name: ${{ github.event.repository.name }}
            namespace: prod-github-runners
            image: gateway.private.pdnd.pagopa.it/pagopa/pdnd-aws-runner-python:v1.0.0
            service_account: github-actions-sa        
            docker_enabled: true
            image_pull_secret: regcred
            volume_claim: ${{ inputs.airflow_volume_claim }}
            volume_mount_path: ${{ inputs.airflow_volume_mount_path }}
      outputs:
        runner_label: ${{ steps.create_runner.outputs.runner_label }}
    release:
      name: Release
      runs-on: [self-hosted, "${{ needs.create_runner.outputs.runner_label }}"]
      needs: create_runner
      steps:
        - uses: nowsprinting/check-version-format-action@447b28744b1b954470f128d1d86ff636164c87c1
          id: version
          with:
            prefix: 'v'
        - name: Check version
          if: steps.version.outputs.is_valid == 'false'
          run: |
                echo "Version: ${{github.ref_name}} is not valid!"
                exit 1
        - name: Check out the repo
          uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
        - name: Set up QEMU
          uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7
          if: ${{ inputs.run_docker_build }}
        - name: Set up Docker Buildx
          id: buildx
          uses: docker/setup-buildx-action@ecf95283f03858871ff00b787d79c419715afc34
          if: ${{ inputs.run_docker_build }}
        - name: Docker Login
          uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
          if: ${{ inputs.run_docker_build }}
          with:
            registry: ${{ vars.IMAGE_REGISTRY_URL }}
            username: ${{ secrets.NEXUS_USERNAME }}
            password: ${{ secrets.NEXUS_PASSWORD }}
        - name: Docker Build and Push
          uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
          if: ${{ inputs.run_docker_build }}
          with:
            build-args: |
              nexus=${{ vars.IMAGE_REGISTRY_URL }}
            context: .
            file: ./Dockerfile
            network: host
            push: true
            provenance: false
            tags: ${{ vars.IMAGE_REGISTRY_URL }}/${{ github.event.repository.name }}-image:${{ steps.version.outputs.full }}
        - name: Deploy Airflow dags
          uses: pagopa/pdnd-github-actions/deploy-airflow-dags@1d69db82abb736b2301a636a6de243c9bb4505c3
          with:
            project: ${{ github.event.repository.name }}
            version: ${{ steps.version.outputs.full }}
            airflow_api_url: "${{ vars.PDND_GATEWAY_URL }}/airflow-${{ inputs.airflow_env }}/api/v1"
            airflow_username: ${{ secrets.AIRFLOW_USERNAME }}
            airflow_password: ${{ secrets.AIRFLOW_PASSWORD }}
            airflow_dags_volume_path: ${{ inputs.airflow_volume_mount_path }}/airflow-${{ inputs.airflow_env }}-dags
        - name: Slack Notification
          uses: ravsamhq/notify-slack-action@bca2d7f5660b833a27bda4f6b8bef389ebfefd25
          if: ${{ always() && !contains(needs.create_runner.result, 'failure') && github.ref_type == 'tag' }}
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            status: ${{ job.status }}
            notification_title: "{workflow} has {status_message}"
            message_format: "{emoji} *{workflow}* <https://github.com/{repo}/actions/runs/${{ github.run_id }}|${{github.ref_name}}> {status_message} in <{repo_url}|{repo}>"
            footer: "<{repo_url}|Repo> | <{workflow_url}|Workflow>"
            notify_when: "success,failure,warnings"
          env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    destroy_runner:
      name: Destroy runner
      runs-on: ubuntu-latest
      if: ${{ always() && !contains(needs.create_runner.result, 'failure') && github.ref_type == 'tag' }}
      needs: [create_runner, release]
      steps:
        - name: Destroy Runner
          id: destroy_runner
          uses: pagopa/pdnd-github-actions/undeploy-gh-runner@532e8ac6faf40b251dd33c1ccec1d8565349489e
          with:
            api_server: ${{ vars.K8S_API_SERVER }}
            access_token: ${{ secrets.GH_ACTIONS_SA_ACCESS_TOKEN }}
            base64_encoded_ca_crt: ${{ secrets.K8S_CA_CRT }}
            runner_label: ${{ needs.create_runner.outputs.runner_label }}
            namespace: prod-github-runners