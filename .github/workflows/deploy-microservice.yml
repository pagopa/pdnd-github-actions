name: Microservice - Deploy
on:
  workflow_call:
    inputs:
      eks-cluster:
        required: true
        type: string
      openapi-folder:
        required: false
        type: string
      deploy-apigw-module-name:
        description: "TF module for the API deployment on AWS API Gateway"
        default: "module.deploy_api_gw"
        required: false
        type: string
      deploy-environment:
        required: true
        type: string

jobs:
  create-runner:
    name: Create Runner
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Create Runner
        id: create_runner
        uses: pagopa/pdnd-github-actions/deploy-eks-gh-runner@7fb09afd4227db40789da70cbdaa2c7157abff49
        with:
          name: ${{ github.event.repository.name }}
          cluster_name: ${{ vars.RUNNER_CLUSTER_NAME }}
          aws_runner_deploy_role: ${{ secrets.AWS_RUNNER_DEPLOY_ROLE }}
          namespace: ${{ vars.RUNNER_K8S_NAMESPACE }}
          image: ${{ vars.RUNNER_DOCKER_IMAGE }}
          service_account: ${{ vars.RUNNER_SERVICE_ACCOUNT }}
          docker_enabled: true
    outputs:
      runner_label: ${{ steps.create_runner.outputs.runner_label }}
  deploy-microservice:
    name: Deploy to K8S
    needs:
      - create-runner
    runs-on: [self-hosted, "${{ needs.create-runner.outputs.runner_label }}"]
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: Verify tag
        id: tag_verify
        uses: nowsprinting/check-version-format-action@de7dcbd404b253dd775262e49c9924fa834e17a2 # v4.0.3
        with:
          prefix: 'v'
      - name: Get Target Namespace
        id: deploy_namespace
        run: |
          echo "deploy_namespace=$(yq -r '.namespace' .k8s/helm/values.yaml)" >> "$GITHUB_OUTPUT"
      - name: Deploy to K8S via Helm
        id: helm_deploy
        env:
          HELM_RELEASE: ${{ github.event.repository.name }}
          HELM_REPOSITORY: .k8s/helm
          HELM_DEFAULT_VALUES: .k8s/helm/values.yaml
          HELM_NAMESPACE: ${{ steps.deploy_namespace.outputs.deploy_namespace }}
          HELM_ENV_VALUES: .k8s/helm/env-values/${{ inputs.deploy-environment }}.yaml
        run: |
          aws eks update-kubeconfig --region eu-central-1 --name ${{ inputs.eks-cluster }}
          helm upgrade --install $HELM_RELEASE $HELM_REPOSITORY -n $HELM_NAMESPACE -f $HELM_DEFAULT_VALUES -f $HELM_ENV_VALUES
  deploy-openapi:
    name: Deploy to API Gateway
    if: ${{ inputs.openapi-folder != null && inputs.openapi-folder != '' }}
    needs:
      - create-runner
      - deploy-microservice
    runs-on: [self-hosted, "${{ needs.create-runner.outputs.runner_label }}"]
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: Install PyYAML
        id: openapi_dependencies
        run: pip install PyYAML==6.0
      - name : Convert OpenAPI
        id: openapi_convert
        run: |
          wget --header "Authorization: token ${{ secrets.PAT_BOT }}" ${{ vars.OPENAPI_INTEGRATION_SCRIPT_URL }} -P /tmp/
          python3 /tmp/openapi_integration.py -i ${{ inputs.openapi-folder }}/openapi.yaml -o ${{ vars.AWS_OPENAPI_PATH }}
      - name: Setup Git Credentials
        id: openapi_git_credentials
        uses: de-vri-es/setup-git-credentials@5e1f18da68b7039c7f824408d170811aaec93ca8 # v2.1.2
        with:
          credentials: https://pdnd-pagopa-github-bot:${{ secrets.PAT_BOT }}@github.com/
      - name : Deploy OpenAPI
        id: openapi_deploy
        run: |
          cd .infra/aws
          sh ./terraform.sh apply prod -auto-approve -target=${{ inputs.deploy-apigw-module-name }}
  destroy-runner:
    name: Destroy Runner
    runs-on: ubuntu-latest
    needs:
      - create-runner
      - deploy-microservice
      - deploy-openapi
    permissions:
      id-token: write
      contents: read
    if: ${{ always() && !contains(needs.create-runner.result, 'failure') && !contains(needs.create-runner.result, 'skipped')}}
    steps:
      - name: Destroy Runner
        id: destroy_runner
        uses: pagopa/pdnd-github-actions/undeploy-eks-gh-runner@7fb09afd4227db40789da70cbdaa2c7157abff49
        with:
          cluster_name: ${{ vars.RUNNER_CLUSTER_NAME }}
          aws_runner_deploy_role: ${{ secrets.AWS_RUNNER_DEPLOY_ROLE }}
          runner_label: ${{ needs.create-runner.outputs.runner_label }}
          namespace:  ${{ vars.RUNNER_K8S_NAMESPACE }}
