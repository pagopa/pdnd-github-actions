name: Release
on:
  workflow_call:
    inputs:
      native:
        description: 'Native Build'
        default: false
        required: true
        type: boolean
    outputs:
      release_tag:
        description: "Release Tag name"
        value: ${{ jobs.release.outputs.release_tag }}
jobs:
  create_runner:
    runs-on: ubuntu-latest
    steps:
      - name: Create Runner
        id: create_runner
        uses: pagopa/pdnd-github-actions/deploy-gh-runner@v1.0.1
        with:
          api_server: ${{ vars.K8S_API_SERVER }}
          access_token: ${{ secrets.GH_ACTIONS_SA_ACCESS_TOKEN }}
          base64_encoded_ca_crt: ${{ secrets.K8S_CA_CRT }}
          name: pdnd-ms-io-stats
          namespace: prod-github-runners
          image: gateway.private.pdnd.pagopa.it/pagopa/pdnd-aws-runner-microservices:v1.1.3
          service_account: github-actions-sa
          docker_enabled: true
          image_pull_secret: regcred
    outputs:
      runner_label: ${{ steps.create_runner.outputs.runner_label }}
  release:
    runs-on: [self-hosted, "${{ needs.create_runner.outputs.runner_label }}"]
    needs:
      - create_runner
    env:
      GITHUB_TOKEN: ${{ secrets.PAT_BOT }}
      JAVA_HOME: /usr/lib/jvm/temurin-17-jdk-amd64
      BOT_USERNAME: pdnd-pagopa-github-bot
      BOT_EMAIL: "pdnd-pagopa-github-bot@pagopa.it"
    environment: prod
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_BOT }}
#      - name: Check default branch
          #        run: |
          #default_branch=$(git remote show origin | awk '/HEAD branch/ {print $3}')
            #if [ "${{ github.ref }}" != "refs/heads/$default_branch" ]; then
            #echo "Error: Workflow must be triggered from default branch ($default_branch)." >&2
          #exit 1
          #fi
      - name: Java Setup
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Remove Snapshot
        run: |
          ./mvnw versions:set -DremoveSnapshot versions:commit
          git config --global user.name ${{ env.BOT_USERNAME }}
          git config --global user.email ${{ env.BOT_EMAIL }}
          git add -A
          git commit -m "[ci skip] Removed snapshot version for current release"
      - name: Create Tag
        run: |
          git config --global user.name ${{ env.BOT_USERNAME }}
          git config --global user.email ${{ env.BOT_EMAIL }}
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          git tag -a v$VERSION -m "Version $VERSION"
          git push origin --tags
      - name: Move to next version
        run: |
          ./mvnw build-helper:parse-version versions:set \
          -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}-SNAPSHOT \
          versions:commit
          git config --global user.name ${{ env.BOT_USERNAME }}
          git config --global user.email ${{ env.BOT_EMAIL }}
          git add -A
          git commit -m "[ci skip] Incremented version for next release"
      - name: Push
        uses: pagopa/pdnd-github-actions/push-bot@v1.0.1
        with:
          token: ${{ secrets.PAT_BOT }}
          branch_name: ${{ github.ref }}
          bot_name: ${{ env.BOT_USERNAME }}
      - name: Set environment variable
        run: echo "RELEASE_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
        ##run: echo "RELEASE_TAG=$(git describe --tags --always --long --match 'refs/tags/*')" >> $GITHUB_ENV
    outputs:
      release_tag: ${{ env.RELEASE_TAG }}
  destroy_runner:
    runs-on: ubuntu-latest
    if: ${{ always() && !contains(needs.create_runner.result, 'failure') }}
    needs:
      - create_runner
      - release
    steps:
      - name: Destroy Runner
        id: destroy_runner
        uses: pagopa/pdnd-github-actions/undeploy-gh-runner@v1.0.1
        with:
          api_server: ${{ vars.K8S_API_SERVER }}
          access_token: ${{ secrets.GH_ACTIONS_SA_ACCESS_TOKEN }}
          base64_encoded_ca_crt: ${{ secrets.K8S_CA_CRT }}
          runner_label: ${{ needs.create_runner.outputs.runner_label }}
          namespace: prod-github-runners
