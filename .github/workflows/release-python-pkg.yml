name: Release
on:
  workflow_call:
jobs:
  create_runner:
    name: Create runner
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Create Runner
        id: create_runner
        uses: pagopa/pdnd-github-actions/deploy-eks-gh-runner@PA-536
        with:
          name: ${{ github.event.repository.name }}
          cluster_name: ${{ vars.RUNNER_CLUSTER_NAME }}
          aws_runner_deploy_role: ${{ secrets.AWS_RUNNER_DEPLOY_ROLE }}
          namespace: ${{ vars.RUNNER_K8S_NAMESPACE }}
          image: ${{ vars.RUNNER_DOCKER_IMAGE}}
          service_account: ${{ vars.RUNNER_SERVICE_ACCOUNT }}        
          docker_enabled: true
    outputs:
      runner_label: ${{ steps.create_runner.outputs.runner_label }}
  release:
      name: Release
      runs-on: [self-hosted, "${{ needs.create_runner.outputs.runner_label }}"]
      needs: create_runner
      steps:
        - uses: nowsprinting/check-version-format-action@447b28744b1b954470f128d1d86ff636164c87c1
          id: version
          with:
            prefix: 'v'
        - name: Check version
          if: steps.version.outputs.is_valid == 'false'
          run: |
                echo "Version: ${{github.ref_name}} is not valid!"
                exit 1
        - name: Check out the repo
          uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
        - name: Build pkg
          run: |
                aws codeartifact create-repository --domain pdnd --domain-owner 688071769384 --repository ${{ github.event.repository.name }}
                aws codeartifact login --tool pip --repository ${{ github.event.repository.name }} --domain pdnd --domain-owner 688071769384 --region eu-central-1
                echo '__version__="'${{ steps.version.outputs.full }}'"' > _version.py
                python3 setup.py sdist bdist_wheel
        - name: Publish pkg
          uses: pypa/gh-action-pypi-publish@f8c70e705ffc13c3b4d1221169b84f12a75d6ca8
        - name: Slack Notification
          uses: ravsamhq/notify-slack-action@bca2d7f5660b833a27bda4f6b8bef389ebfefd25
          if: ${{ always() && !contains(needs.create_runner.result, 'failure') && github.ref_type == 'tag' }}
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            status: ${{ job.status }}
            notification_title: "{workflow} has {status_message}"
            message_format: "{emoji} *{workflow}* <https://github.com/{repo}/actions/runs/${{ github.run_id }}|${{github.ref_name}}> {status_message} in <{repo_url}|{repo}>"
            footer: "<{repo_url}|Repo> | <{workflow_url}|Workflow>"
            notify_when: "success,failure,warnings"
          env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  destroy_runner:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    if: ${{ always() && !contains(needs.create_runner.result, 'failure') }}
    needs:
      - create_runner
      - release
    steps:
      - name: Destroy Runner
        id: destroy_runner
        uses: pagopa/pdnd-github-actions/undeploy-eks-gh-runner@PA-536
        with:
          cluster_name: ${{ vars.RUNNER_CLUSTER_NAME }}
          aws_runner_deploy_role: ${{ secrets.AWS_RUNNER_DEPLOY_ROLE }}
          runner_label: ${{ needs.create_runner.outputs.runner_label }}
          namespace:  ${{ vars.RUNNER_K8S_NAMESPACE }}